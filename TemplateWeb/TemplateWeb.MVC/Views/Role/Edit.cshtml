@model TemplateWeb.Common.ViewModels.mRoleVW

@{
    ViewBag.Title = "Edit Role";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("Edit", "Role", FormMethod.Post, new { id = "frmRole" }))
{
    @Html.AntiForgeryToken()

    <section class="content-header">
        <h1>
            @ViewBag.Title
        </h1>
    </section>

    <section class="content">
        <div class="row">
            <div class="box box-default">
                <div class="box-header with-border text-right">
                    <a href="@Url.Action("/Index")" class="btn btn-default"><i class="fa fa-arrow-left"></i> Back</a>
                    <button type="submit" name="btn" value="SAVE" class="btn btn-success"><i class="fa fa-floppy-o"></i> Edit</button>
                </div>
                <form role="form">
                    <div class="box-body">
                        @Html.HiddenFor(model => model.intRoleID)
                        @Html.HiddenFor(model => model.txtGUID)
                        @Html.HiddenFor(model => model.txtCreatedBy)
                        @Html.HiddenFor(model => model.dtmCreatedDate)
                        @Html.HiddenFor(model => model.txtUpdatedBy)
                        @Html.HiddenFor(model => model.dtmUpdatedDate)

                        <div class="form-group">
                            <label id="lblRoleName" class="col-sm-2 control-label">Role Name</label>
                            <div class="col-md-10" style="padding-bottom:10px">
                                @Html.EditorFor(model => model.txtRoleName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.txtRoleName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="box-body">
                        <div class="form-group">
                            <label id="lblRoleAccess" class="col-sm-2 control-label">Role Access</label>

                            <div class="col-md-10" style="padding-bottom:10px">
                                @{ int j = 0; }
                                @foreach (var item in Model.mMenu)
                                {
                                    if (item.bitParent1 == true)
                                    {
                                        <div class="col-md-10" style="padding-bottom:10px">
                                            @Html.CheckBoxFor(model => model.mMenu[j].bitChecklist, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.DisplayFor(model => model.mMenu[j].txtMenuName, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.HiddenFor(model => model.mMenu[j].intMenuID)
                                            @Html.HiddenFor(model => model.mMenu[j].intParentID)
                                            @Html.HiddenFor(model => model.mMenu[j].intMenuID)
                                            @Html.HiddenFor(model => model.mMenu[j].txtMenuName)
                                            @Html.HiddenFor(model => model.mMenu[j].txtDescription)
                                            @Html.HiddenFor(model => model.mMenu[j].intModuleID)
                                            @Html.HiddenFor(model => model.mMenu[j].txtLink)
                                            @Html.HiddenFor(model => model.mMenu[j].intOrderID)
                                            @Html.HiddenFor(model => model.mMenu[j].bitActive)
                                            @Html.HiddenFor(model => model.mMenu[j].bitParent1)
                                        </div>
                                    }

                                    if (item.bitParent2 == true)
                                    {
                                        <div class="col-md-10" style="padding-bottom:10px; padding-left:40px">
                                            @Html.CheckBoxFor(model => model.mMenu[j].bitChecklist, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.DisplayFor(model => model.mMenu[j].txtMenuName, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.HiddenFor(model => model.mMenu[j].intMenuID)
                                            @Html.HiddenFor(model => model.mMenu[j].intParentID)
                                            @Html.HiddenFor(model => model.mMenu[j].intMenuID)
                                            @Html.HiddenFor(model => model.mMenu[j].txtMenuName)
                                            @Html.HiddenFor(model => model.mMenu[j].txtDescription)
                                            @Html.HiddenFor(model => model.mMenu[j].intModuleID)
                                            @Html.HiddenFor(model => model.mMenu[j].txtLink)
                                            @Html.HiddenFor(model => model.mMenu[j].intOrderID)
                                            @Html.HiddenFor(model => model.mMenu[j].bitActive)
                                            @Html.HiddenFor(model => model.mMenu[j].bitParent2)
                                        </div>
                                    }

                                    if (item.bitParent3 == true)
                                    {
                                        <div class="col-md-10" style="padding-bottom:10px;padding-left:80px">
                                            @Html.CheckBoxFor(model => model.mMenu[j].bitChecklist, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.DisplayFor(model => model.mMenu[j].txtMenuName, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.HiddenFor(model => model.mMenu[j].intMenuID)
                                            @Html.HiddenFor(model => model.mMenu[j].intParentID)
                                            @Html.HiddenFor(model => model.mMenu[j].intMenuID)
                                            @Html.HiddenFor(model => model.mMenu[j].txtMenuName)
                                            @Html.HiddenFor(model => model.mMenu[j].txtDescription)
                                            @Html.HiddenFor(model => model.mMenu[j].intModuleID)
                                            @Html.HiddenFor(model => model.mMenu[j].txtLink)
                                            @Html.HiddenFor(model => model.mMenu[j].intOrderID)
                                            @Html.HiddenFor(model => model.mMenu[j].bitActive)
                                            @Html.HiddenFor(model => model.mMenu[j].bitParent3)
                                        </div>
                                    }

                                    if (item.bitParent4 == true)
                                    {
                                        <div class="col-md-10" style="padding-bottom:10px;padding-left:120px">
                                            @Html.CheckBoxFor(model => model.mMenu[j].bitChecklist, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.DisplayFor(model => model.mMenu[j].txtMenuName, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.HiddenFor(model => model.mMenu[j].intMenuID)
                                            @Html.HiddenFor(model => model.mMenu[j].intParentID)
                                            @Html.HiddenFor(model => model.mMenu[j].intMenuID)
                                            @Html.HiddenFor(model => model.mMenu[j].txtMenuName)
                                            @Html.HiddenFor(model => model.mMenu[j].txtDescription)
                                            @Html.HiddenFor(model => model.mMenu[j].intModuleID)
                                            @Html.HiddenFor(model => model.mMenu[j].txtLink)
                                            @Html.HiddenFor(model => model.mMenu[j].intOrderID)
                                            @Html.HiddenFor(model => model.mMenu[j].bitActive)
                                            @Html.HiddenFor(model => model.mMenu[j].bitParent4)
                                        </div>
                                    }

                                    j = j + 1;
                                }
                            </div>

                        </div>
                    </div>

                    <div class="box-footer">

                    </div>
                </form>
            </div>
        </div>
    </section>


    @section scripts
    {
        <script src="~/Scripts/customs/globalScript.js"></script>

        <script type="text/javascript">
            $(document).ready(function () {

            });
        </script>
    }
}








