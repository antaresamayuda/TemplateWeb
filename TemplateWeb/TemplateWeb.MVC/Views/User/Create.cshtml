@model TemplateWeb.Common.ViewModels.mUserVW

@{
    ViewBag.Title = "Create User";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("Create", "User", FormMethod.Post, new { id = "frmUser" }))
{
    @Html.AntiForgeryToken()

    <section class="content-header">
        <h1>
            @ViewBag.Title
        </h1>
    </section>

    <section class="content">
        <div class="row">
            <div class="box box-default">
                <div class="box-header with-border text-right">
                    <a href="@Url.Action("/Index")" class="btn btn-default"><i class="fa fa-arrow-left"></i> Back</a>
                    <button type="submit" name="btn" value="Save" class="btn btn-success"><i class="fa fa-floppy-o"></i> Save</button>
                </div>
                <form role="form">
                    <div class="box-body">
                        @Html.HiddenFor(model => model.txtGUID)
                        @Html.HiddenFor(model => model.bitActive)
                        <div class="form-group">
                            <label id="lblUserName" class="col-sm-2 control-label">Username</label>
                            <div class="col-md-10" style="padding-bottom:10px">
                                @Html.EditorFor(model => model.txtUserName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.txtUserName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label id="lblName" class="col-sm-2 control-label">Full Name</label>
                            <div class="col-md-10" style="padding-bottom:10px">
                                @Html.EditorFor(model => model.txtName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.txtName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label id="lblCompany" class="col-sm-2 control-label">Company</label>
                            <div class="col-md-10" style="padding-bottom:10px">
                                @Html.DropDownListFor(model => model.intCompanyID, new SelectList(ViewBag.CompanyList as IEnumerable<SelectListItem>, "Value", "Text", Model.intCompanyID), new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.intCompanyID, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label id="lblUserRole" class="col-sm-2 control-label">User Access</label>
                            <div class="col-md-10" style="padding-bottom:10px">
                                @Html.DropDownListFor(model => model.mUserRoles[0].intRoleID, new SelectList(ViewBag.RoleList as IEnumerable<SelectListItem>, "Value", "Text", Model.mUserRoles[0].intRoleID), new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.mUserRoles[0].intRoleID, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label id="lblAlamat" class="col-sm-2 control-label">Address</label>
                            <div class="col-md-10" style="padding-bottom:10px">
                                @Html.EditorFor(model => model.txtAddress, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.txtAddress, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label id="lblHandphone" class="col-sm-2 control-label">Handphone</label>
                            <div class="col-md-10" style="padding-bottom:10px">
                                @Html.EditorFor(model => model.txtPhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.txtPhoneNumber, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label id="lblEmail" class="col-sm-2 control-label">Email</label>
                            <div class="col-md-10" style="padding-bottom:10px">
                                @Html.EditorFor(model => model.txtEmail, new { htmlAttributes = new { @class = "form-control", @type = "email" } })
                                @Html.ValidationMessageFor(model => model.txtEmail, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label id="lblPassword" class="col-sm-2 control-label">Password</label>
                            <div class="col-md-10" style="padding-bottom:10px">
                                @*@Html.PasswordFor(model => model.txtPassword, new { @class = "form-control", placeholder = "Password default is 1234", @disabled = "disabled"})*@
                                @Html.EditorFor(model => model.txtPassword, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.txtPassword, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="box-footer">

                    </div>
                </form>
            </div>
        </div>
    </section>


    @section scripts
    {
        <script src="~/Scripts/customs/globalScript.js"></script>

        <script type="text/javascript">
            $(document).ready(function () {

            });
        </script>
    }
                                    }






